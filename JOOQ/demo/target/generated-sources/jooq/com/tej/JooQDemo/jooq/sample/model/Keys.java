/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model;


import com.tej.JooQDemo.jooq.sample.model.tables.Attribute;
import com.tej.JooQDemo.jooq.sample.model.tables.AttributeInputType;
import com.tej.JooQDemo.jooq.sample.model.tables.AttributeOptions;
import com.tej.JooQDemo.jooq.sample.model.tables.Entity;
import com.tej.JooQDemo.jooq.sample.model.tables.EntityAttributes;
import com.tej.JooQDemo.jooq.sample.model.tables.EntityType;
import com.tej.JooQDemo.jooq.sample.model.tables.FinancialAssessment;
import com.tej.JooQDemo.jooq.sample.model.tables.FinancialAssessmentAttributeValues;
import com.tej.JooQDemo.jooq.sample.model.tables.FinancialAssessmentEscalation;
import com.tej.JooQDemo.jooq.sample.model.tables.FinancialAssessmentMetrics;
import com.tej.JooQDemo.jooq.sample.model.tables.ModelGroup;
import com.tej.JooQDemo.jooq.sample.model.tables.ModelTemplate;
import com.tej.JooQDemo.jooq.sample.model.tables.ModelTemplateDefinition;
import com.tej.JooQDemo.jooq.sample.model.tables.TemplateDefinition;
import com.tej.JooQDemo.jooq.sample.model.tables.records.AttributeInputTypeRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.AttributeOptionsRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.AttributeRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.EntityAttributesRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.EntityRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.EntityTypeRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.FinancialAssessmentAttributeValuesRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.FinancialAssessmentEscalationRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.FinancialAssessmentMetricsRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.FinancialAssessmentRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.ModelGroupRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.ModelTemplateDefinitionRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.ModelTemplateRecord;
import com.tej.JooQDemo.jooq.sample.model.tables.records.TemplateDefinitionRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * finance_service.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AttributeRecord> ATTRIBUTES_PKEY = Internal.createUniqueKey(Attribute.ATTRIBUTE, DSL.name("attributes_pkey"), new TableField[] { Attribute.ATTRIBUTE.ID }, true);
    public static final UniqueKey<AttributeInputTypeRecord> ATTRIBUTE_INPUT_TYPES_PKEY = Internal.createUniqueKey(AttributeInputType.ATTRIBUTE_INPUT_TYPE, DSL.name("attribute_input_types_pkey"), new TableField[] { AttributeInputType.ATTRIBUTE_INPUT_TYPE.ID }, true);
    public static final UniqueKey<AttributeOptionsRecord> ATTRIBUTE_OPTIONS_PKEY = Internal.createUniqueKey(AttributeOptions.ATTRIBUTE_OPTIONS, DSL.name("attribute_options_pkey"), new TableField[] { AttributeOptions.ATTRIBUTE_OPTIONS.ID }, true);
    public static final UniqueKey<EntityRecord> ENTITY_NEW_PKEY = Internal.createUniqueKey(Entity.ENTITY, DSL.name("entity_new_pkey"), new TableField[] { Entity.ENTITY.ID }, true);
    public static final UniqueKey<EntityAttributesRecord> ENTITY_ATTRIBUTES_PKEY = Internal.createUniqueKey(EntityAttributes.ENTITY_ATTRIBUTES, DSL.name("entity_attributes_pkey"), new TableField[] { EntityAttributes.ENTITY_ATTRIBUTES.ID }, true);
    public static final UniqueKey<EntityTypeRecord> ENTITY_TYPES_PKEY = Internal.createUniqueKey(EntityType.ENTITY_TYPE, DSL.name("entity_types_pkey"), new TableField[] { EntityType.ENTITY_TYPE.ID }, true);
    public static final UniqueKey<FinancialAssessmentRecord> FINANCIAL_ASSESSMENT_PKEY = Internal.createUniqueKey(FinancialAssessment.FINANCIAL_ASSESSMENT, DSL.name("financial_assessment_pkey"), new TableField[] { FinancialAssessment.FINANCIAL_ASSESSMENT.ID }, true);
    public static final UniqueKey<FinancialAssessmentAttributeValuesRecord> FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES_PKEY = Internal.createUniqueKey(FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES, DSL.name("financial_assessment_attribute_values_pkey"), new TableField[] { FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES.ID }, true);
    public static final UniqueKey<FinancialAssessmentEscalationRecord> FINANCIAL_ASSESSMENT_ESCALATION_PKEY = Internal.createUniqueKey(FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION, DSL.name("financial_assessment_escalation_pkey"), new TableField[] { FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION.ID }, true);
    public static final UniqueKey<FinancialAssessmentMetricsRecord> FINANCIAL_ASSESSMENT_METRICS_PKEY = Internal.createUniqueKey(FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS, DSL.name("financial_assessment_metrics_pkey"), new TableField[] { FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS.ID }, true);
    public static final UniqueKey<ModelGroupRecord> MODEL_GROUPS_PKEY = Internal.createUniqueKey(ModelGroup.MODEL_GROUP, DSL.name("model_groups_pkey"), new TableField[] { ModelGroup.MODEL_GROUP.ID }, true);
    public static final UniqueKey<ModelTemplateRecord> TEMPLATE_MODELS_PKEY1 = Internal.createUniqueKey(ModelTemplate.MODEL_TEMPLATE, DSL.name("template_models_pkey1"), new TableField[] { ModelTemplate.MODEL_TEMPLATE.ID }, true);
    public static final UniqueKey<ModelTemplateDefinitionRecord> MODEL_TEMPLATE_DEFINITION_PKEY = Internal.createUniqueKey(ModelTemplateDefinition.MODEL_TEMPLATE_DEFINITION, DSL.name("model_template_definition_pkey"), new TableField[] { ModelTemplateDefinition.MODEL_TEMPLATE_DEFINITION.ID }, true);
    public static final UniqueKey<TemplateDefinitionRecord> TEMPLATE_DEFINITION_PKEY = Internal.createUniqueKey(TemplateDefinition.TEMPLATE_DEFINITION, DSL.name("template_definition_pkey"), new TableField[] { TemplateDefinition.TEMPLATE_DEFINITION.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AttributeRecord, AttributeInputTypeRecord> ATTRIBUTE__ATTRIBUTE_INPUT_TYPE_ID_FKEY = Internal.createForeignKey(Attribute.ATTRIBUTE, DSL.name("attribute_input_type_id_fkey"), new TableField[] { Attribute.ATTRIBUTE.INPUT_TYPE_ID }, Keys.ATTRIBUTE_INPUT_TYPES_PKEY, new TableField[] { AttributeInputType.ATTRIBUTE_INPUT_TYPE.ID }, true);
    public static final ForeignKey<AttributeOptionsRecord, AttributeRecord> ATTRIBUTE_OPTIONS__ATTRIBUTE_OPTIONS_ATTRIBUTE_ID_FKEY = Internal.createForeignKey(AttributeOptions.ATTRIBUTE_OPTIONS, DSL.name("attribute_options_attribute_id_fkey"), new TableField[] { AttributeOptions.ATTRIBUTE_OPTIONS.ATTRIBUTE_ID }, Keys.ATTRIBUTES_PKEY, new TableField[] { Attribute.ATTRIBUTE.ID }, true);
    public static final ForeignKey<EntityRecord, EntityTypeRecord> ENTITY__ENTITY_ENTITY_TYPE_ID_FKEY = Internal.createForeignKey(Entity.ENTITY, DSL.name("entity_entity_type_id_fkey"), new TableField[] { Entity.ENTITY.ENTITY_TYPE_ID }, Keys.ENTITY_TYPES_PKEY, new TableField[] { EntityType.ENTITY_TYPE.ID }, true);
    public static final ForeignKey<EntityRecord, ModelTemplateRecord> ENTITY__ENTITY_MODEL_TEMPLATE_ID_FKEY = Internal.createForeignKey(Entity.ENTITY, DSL.name("entity_model_template_id_fkey"), new TableField[] { Entity.ENTITY.MODEL_TEMPLATE_ID }, Keys.TEMPLATE_MODELS_PKEY1, new TableField[] { ModelTemplate.MODEL_TEMPLATE.ID }, true);
    public static final ForeignKey<EntityAttributesRecord, AttributeRecord> ENTITY_ATTRIBUTES__ENTITY_ATTRIBUTES_ATTRIBUTE_ID_FKEY = Internal.createForeignKey(EntityAttributes.ENTITY_ATTRIBUTES, DSL.name("entity_attributes_attribute_id_fkey"), new TableField[] { EntityAttributes.ENTITY_ATTRIBUTES.ATTRIBUTE_ID }, Keys.ATTRIBUTES_PKEY, new TableField[] { Attribute.ATTRIBUTE.ID }, true);
    public static final ForeignKey<EntityAttributesRecord, EntityRecord> ENTITY_ATTRIBUTES__ENTITY_ATTRIBUTES_ENTITY_ID_FKEY = Internal.createForeignKey(EntityAttributes.ENTITY_ATTRIBUTES, DSL.name("entity_attributes_entity_id_fkey"), new TableField[] { EntityAttributes.ENTITY_ATTRIBUTES.ENTITY_ID }, Keys.ENTITY_NEW_PKEY, new TableField[] { Entity.ENTITY.ID }, true);
    public static final ForeignKey<FinancialAssessmentRecord, TemplateDefinitionRecord> FINANCIAL_ASSESSMENT__FK_FINANCIALASSESSMENT_TEMPLATEDEFINITIONID = Internal.createForeignKey(FinancialAssessment.FINANCIAL_ASSESSMENT, DSL.name("fk_financialassessment_templatedefinitionid"), new TableField[] { FinancialAssessment.FINANCIAL_ASSESSMENT.TEMPLATE_DEFINITION_ID }, Keys.TEMPLATE_DEFINITION_PKEY, new TableField[] { TemplateDefinition.TEMPLATE_DEFINITION.ID }, true);
    public static final ForeignKey<FinancialAssessmentAttributeValuesRecord, FinancialAssessmentRecord> FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES__FINANCIAL_ASSESSMENT_ATTRIBUTE_VAL_FINANCIAL_ASSESSMENT_ID_FKEY = Internal.createForeignKey(FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES, DSL.name("financial_assessment_attribute_val_financial_assessment_id_fkey"), new TableField[] { FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES.FINANCIAL_ASSESSMENT_ID }, Keys.FINANCIAL_ASSESSMENT_PKEY, new TableField[] { FinancialAssessment.FINANCIAL_ASSESSMENT.ID }, true);
    public static final ForeignKey<FinancialAssessmentAttributeValuesRecord, AttributeOptionsRecord> FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES__FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES_ATTRIBUTE_OPTION_ID_FKEY = Internal.createForeignKey(FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES, DSL.name("financial_assessment_attribute_values_attribute_option_id_fkey"), new TableField[] { FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES.ATTRIBUTE_OPTION_ID }, Keys.ATTRIBUTE_OPTIONS_PKEY, new TableField[] { AttributeOptions.ATTRIBUTE_OPTIONS.ID }, true);
    public static final ForeignKey<FinancialAssessmentAttributeValuesRecord, EntityAttributesRecord> FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES__FINANCIAL_ASSESSMENT_ENTITY_ATTRIBUTE__ENTITY_ATTRIBUTE_ID_FKEY = Internal.createForeignKey(FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES, DSL.name("financial_assessment_entity_attribute__entity_attribute_id_fkey"), new TableField[] { FinancialAssessmentAttributeValues.FINANCIAL_ASSESSMENT_ATTRIBUTE_VALUES.ENTITY_ATTRIBUTE_ID }, Keys.ENTITY_ATTRIBUTES_PKEY, new TableField[] { EntityAttributes.ENTITY_ATTRIBUTES.ID }, true);
    public static final ForeignKey<FinancialAssessmentEscalationRecord, FinancialAssessmentRecord> FINANCIAL_ASSESSMENT_ESCALATION__FK_FINANCIALASSESSMENTESCALATION_FINANCIALASSESSMENTID = Internal.createForeignKey(FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION, DSL.name("fk_financialassessmentescalation_financialassessmentid"), new TableField[] { FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION.FINANCIAL_ASSESSMENT_ID }, Keys.FINANCIAL_ASSESSMENT_PKEY, new TableField[] { FinancialAssessment.FINANCIAL_ASSESSMENT.ID }, true);
    public static final ForeignKey<FinancialAssessmentEscalationRecord, ModelGroupRecord> FINANCIAL_ASSESSMENT_ESCALATION__FK_FINANCIALASSESSMENTESCALATION_MODELGROUPID = Internal.createForeignKey(FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION, DSL.name("fk_financialassessmentescalation_modelgroupid"), new TableField[] { FinancialAssessmentEscalation.FINANCIAL_ASSESSMENT_ESCALATION.MODEL_GROUP_ID }, Keys.MODEL_GROUPS_PKEY, new TableField[] { ModelGroup.MODEL_GROUP.ID }, true);
    public static final ForeignKey<FinancialAssessmentMetricsRecord, EntityRecord> FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_ENTITY_ID_FKEY = Internal.createForeignKey(FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS, DSL.name("financial_assessment_metrics_entity_id_fkey"), new TableField[] { FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS.ENTITY_ID }, Keys.ENTITY_NEW_PKEY, new TableField[] { Entity.ENTITY.ID }, true);
    public static final ForeignKey<FinancialAssessmentMetricsRecord, FinancialAssessmentRecord> FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_FINANCIAL_ASSESSMENT_ID_FKEY = Internal.createForeignKey(FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS, DSL.name("financial_assessment_metrics_financial_assessment_id_fkey"), new TableField[] { FinancialAssessmentMetrics.FINANCIAL_ASSESSMENT_METRICS.FINANCIAL_ASSESSMENT_ID }, Keys.FINANCIAL_ASSESSMENT_PKEY, new TableField[] { FinancialAssessment.FINANCIAL_ASSESSMENT.ID }, true);
    public static final ForeignKey<ModelGroupRecord, ModelGroupRecord> MODEL_GROUP__FK_MODEL_GROUP_SELF = Internal.createForeignKey(ModelGroup.MODEL_GROUP, DSL.name("fk_model_group_self"), new TableField[] { ModelGroup.MODEL_GROUP.PARENT_ID }, Keys.MODEL_GROUPS_PKEY, new TableField[] { ModelGroup.MODEL_GROUP.ID }, true);
    public static final ForeignKey<ModelGroupRecord, TemplateDefinitionRecord> MODEL_GROUP__FK_TEMPLATE_DEFINITION = Internal.createForeignKey(ModelGroup.MODEL_GROUP, DSL.name("fk_template_definition"), new TableField[] { ModelGroup.MODEL_GROUP.TEMPLATE_DEFINITION_ID }, Keys.TEMPLATE_DEFINITION_PKEY, new TableField[] { TemplateDefinition.TEMPLATE_DEFINITION.ID }, true);
    public static final ForeignKey<ModelTemplateRecord, ModelGroupRecord> MODEL_TEMPLATE__MODEL_TEMPLATE_MODEL_GROUP_ID_FKEY = Internal.createForeignKey(ModelTemplate.MODEL_TEMPLATE, DSL.name("model_template_model_group_id_fkey"), new TableField[] { ModelTemplate.MODEL_TEMPLATE.MODEL_GROUP_ID }, Keys.MODEL_GROUPS_PKEY, new TableField[] { ModelGroup.MODEL_GROUP.ID }, true);
    public static final ForeignKey<ModelTemplateDefinitionRecord, ModelTemplateRecord> MODEL_TEMPLATE_DEFINITION__MODEL_TEMPLATE_DEFINITION_MODEL_TEMPLATE_ID_FKEY = Internal.createForeignKey(ModelTemplateDefinition.MODEL_TEMPLATE_DEFINITION, DSL.name("model_template_definition_model_template_id_fkey"), new TableField[] { ModelTemplateDefinition.MODEL_TEMPLATE_DEFINITION.MODEL_TEMPLATE_ID }, Keys.TEMPLATE_MODELS_PKEY1, new TableField[] { ModelTemplate.MODEL_TEMPLATE.ID }, true);
}
