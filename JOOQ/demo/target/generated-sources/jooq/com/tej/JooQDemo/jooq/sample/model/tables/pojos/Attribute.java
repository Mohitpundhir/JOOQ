/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attribute implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long      id;
    private String    name;
    private String    description;
    private Long      inputTypeId;
    private Double    defaultValue;
    private Boolean   isUserInput;
    private String    suffix;
    private String    prefix;
    private String    attributeGroup;
    private Long      defaultOptionId;
    private LocalDate defaultDate;

    public Attribute() {}

    public Attribute(Attribute value) {
        this.id = value.id;
        this.name = value.name;
        this.description = value.description;
        this.inputTypeId = value.inputTypeId;
        this.defaultValue = value.defaultValue;
        this.isUserInput = value.isUserInput;
        this.suffix = value.suffix;
        this.prefix = value.prefix;
        this.attributeGroup = value.attributeGroup;
        this.defaultOptionId = value.defaultOptionId;
        this.defaultDate = value.defaultDate;
    }

    public Attribute(
        Long      id,
        String    name,
        String    description,
        Long      inputTypeId,
        Double    defaultValue,
        Boolean   isUserInput,
        String    suffix,
        String    prefix,
        String    attributeGroup,
        Long      defaultOptionId,
        LocalDate defaultDate
    ) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.inputTypeId = inputTypeId;
        this.defaultValue = defaultValue;
        this.isUserInput = isUserInput;
        this.suffix = suffix;
        this.prefix = prefix;
        this.attributeGroup = attributeGroup;
        this.defaultOptionId = defaultOptionId;
        this.defaultDate = defaultDate;
    }

    /**
     * Getter for <code>finance_service.attribute.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>finance_service.attribute.id</code>.
     */
    public Attribute setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>finance_service.attribute.name</code>.
     */
    public Attribute setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>finance_service.attribute.description</code>.
     */
    public Attribute setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.input_type_id</code>.
     */
    public Long getInputTypeId() {
        return this.inputTypeId;
    }

    /**
     * Setter for <code>finance_service.attribute.input_type_id</code>.
     */
    public Attribute setInputTypeId(Long inputTypeId) {
        this.inputTypeId = inputTypeId;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.default_value</code>.
     */
    public Double getDefaultValue() {
        return this.defaultValue;
    }

    /**
     * Setter for <code>finance_service.attribute.default_value</code>.
     */
    public Attribute setDefaultValue(Double defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.is_user_input</code>.
     */
    public Boolean getIsUserInput() {
        return this.isUserInput;
    }

    /**
     * Setter for <code>finance_service.attribute.is_user_input</code>.
     */
    public Attribute setIsUserInput(Boolean isUserInput) {
        this.isUserInput = isUserInput;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.suffix</code>.
     */
    public String getSuffix() {
        return this.suffix;
    }

    /**
     * Setter for <code>finance_service.attribute.suffix</code>.
     */
    public Attribute setSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.prefix</code>.
     */
    public String getPrefix() {
        return this.prefix;
    }

    /**
     * Setter for <code>finance_service.attribute.prefix</code>.
     */
    public Attribute setPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.attribute_group</code>.
     */
    public String getAttributeGroup() {
        return this.attributeGroup;
    }

    /**
     * Setter for <code>finance_service.attribute.attribute_group</code>.
     */
    public Attribute setAttributeGroup(String attributeGroup) {
        this.attributeGroup = attributeGroup;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.default_option_id</code>.
     */
    public Long getDefaultOptionId() {
        return this.defaultOptionId;
    }

    /**
     * Setter for <code>finance_service.attribute.default_option_id</code>.
     */
    public Attribute setDefaultOptionId(Long defaultOptionId) {
        this.defaultOptionId = defaultOptionId;
        return this;
    }

    /**
     * Getter for <code>finance_service.attribute.default_date</code>.
     */
    public LocalDate getDefaultDate() {
        return this.defaultDate;
    }

    /**
     * Setter for <code>finance_service.attribute.default_date</code>.
     */
    public Attribute setDefaultDate(LocalDate defaultDate) {
        this.defaultDate = defaultDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Attribute other = (Attribute) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (inputTypeId == null) {
            if (other.inputTypeId != null)
                return false;
        }
        else if (!inputTypeId.equals(other.inputTypeId))
            return false;
        if (defaultValue == null) {
            if (other.defaultValue != null)
                return false;
        }
        else if (!defaultValue.equals(other.defaultValue))
            return false;
        if (isUserInput == null) {
            if (other.isUserInput != null)
                return false;
        }
        else if (!isUserInput.equals(other.isUserInput))
            return false;
        if (suffix == null) {
            if (other.suffix != null)
                return false;
        }
        else if (!suffix.equals(other.suffix))
            return false;
        if (prefix == null) {
            if (other.prefix != null)
                return false;
        }
        else if (!prefix.equals(other.prefix))
            return false;
        if (attributeGroup == null) {
            if (other.attributeGroup != null)
                return false;
        }
        else if (!attributeGroup.equals(other.attributeGroup))
            return false;
        if (defaultOptionId == null) {
            if (other.defaultOptionId != null)
                return false;
        }
        else if (!defaultOptionId.equals(other.defaultOptionId))
            return false;
        if (defaultDate == null) {
            if (other.defaultDate != null)
                return false;
        }
        else if (!defaultDate.equals(other.defaultDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.inputTypeId == null) ? 0 : this.inputTypeId.hashCode());
        result = prime * result + ((this.defaultValue == null) ? 0 : this.defaultValue.hashCode());
        result = prime * result + ((this.isUserInput == null) ? 0 : this.isUserInput.hashCode());
        result = prime * result + ((this.suffix == null) ? 0 : this.suffix.hashCode());
        result = prime * result + ((this.prefix == null) ? 0 : this.prefix.hashCode());
        result = prime * result + ((this.attributeGroup == null) ? 0 : this.attributeGroup.hashCode());
        result = prime * result + ((this.defaultOptionId == null) ? 0 : this.defaultOptionId.hashCode());
        result = prime * result + ((this.defaultDate == null) ? 0 : this.defaultDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Attribute (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(inputTypeId);
        sb.append(", ").append(defaultValue);
        sb.append(", ").append(isUserInput);
        sb.append(", ").append(suffix);
        sb.append(", ").append(prefix);
        sb.append(", ").append(attributeGroup);
        sb.append(", ").append(defaultOptionId);
        sb.append(", ").append(defaultDate);

        sb.append(")");
        return sb.toString();
    }
}
