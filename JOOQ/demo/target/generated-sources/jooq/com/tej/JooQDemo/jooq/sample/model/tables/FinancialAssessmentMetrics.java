/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables;


import com.tej.JooQDemo.jooq.sample.model.FinanceService;
import com.tej.JooQDemo.jooq.sample.model.Keys;
import com.tej.JooQDemo.jooq.sample.model.tables.records.FinancialAssessmentMetricsRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FinancialAssessmentMetrics extends TableImpl<FinancialAssessmentMetricsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>finance_service.financial_assessment_metrics</code>
     */
    public static final FinancialAssessmentMetrics FINANCIAL_ASSESSMENT_METRICS = new FinancialAssessmentMetrics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FinancialAssessmentMetricsRecord> getRecordType() {
        return FinancialAssessmentMetricsRecord.class;
    }

    /**
     * The column <code>finance_service.financial_assessment_metrics.id</code>.
     */
    public final TableField<FinancialAssessmentMetricsRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>finance_service.financial_assessment_metrics.financial_assessment_id</code>.
     */
    public final TableField<FinancialAssessmentMetricsRecord, Long> FINANCIAL_ASSESSMENT_ID = createField(DSL.name("financial_assessment_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.financial_assessment_metrics.value</code>.
     */
    public final TableField<FinancialAssessmentMetricsRecord, BigDecimal> VALUE = createField(DSL.name("value"), SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>finance_service.financial_assessment_metrics.entity_id</code>.
     */
    public final TableField<FinancialAssessmentMetricsRecord, Long> ENTITY_ID = createField(DSL.name("entity_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.financial_assessment_metrics.is_escalated</code>.
     */
    public final TableField<FinancialAssessmentMetricsRecord, Boolean> IS_ESCALATED = createField(DSL.name("is_escalated"), SQLDataType.BOOLEAN, this, "");

    private FinancialAssessmentMetrics(Name alias, Table<FinancialAssessmentMetricsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FinancialAssessmentMetrics(Name alias, Table<FinancialAssessmentMetricsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>finance_service.financial_assessment_metrics</code> table reference
     */
    public FinancialAssessmentMetrics(String alias) {
        this(DSL.name(alias), FINANCIAL_ASSESSMENT_METRICS);
    }

    /**
     * Create an aliased <code>finance_service.financial_assessment_metrics</code> table reference
     */
    public FinancialAssessmentMetrics(Name alias) {
        this(alias, FINANCIAL_ASSESSMENT_METRICS);
    }

    /**
     * Create a <code>finance_service.financial_assessment_metrics</code> table reference
     */
    public FinancialAssessmentMetrics() {
        this(DSL.name("financial_assessment_metrics"), null);
    }

    public <O extends Record> FinancialAssessmentMetrics(Table<O> child, ForeignKey<O, FinancialAssessmentMetricsRecord> key) {
        super(child, key, FINANCIAL_ASSESSMENT_METRICS);
    }

    @Override
    public Schema getSchema() {
        return FinanceService.FINANCE_SERVICE;
    }

    @Override
    public Identity<FinancialAssessmentMetricsRecord, Long> getIdentity() {
        return (Identity<FinancialAssessmentMetricsRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<FinancialAssessmentMetricsRecord> getPrimaryKey() {
        return Keys.FINANCIAL_ASSESSMENT_METRICS_PKEY;
    }

    @Override
    public List<UniqueKey<FinancialAssessmentMetricsRecord>> getKeys() {
        return Arrays.<UniqueKey<FinancialAssessmentMetricsRecord>>asList(Keys.FINANCIAL_ASSESSMENT_METRICS_PKEY);
    }

    @Override
    public List<ForeignKey<FinancialAssessmentMetricsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FinancialAssessmentMetricsRecord, ?>>asList(Keys.FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_FINANCIAL_ASSESSMENT_ID_FKEY, Keys.FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_ENTITY_ID_FKEY);
    }

    private transient FinancialAssessment _financialAssessment;
    private transient Entity _entity;

    public FinancialAssessment financialAssessment() {
        if (_financialAssessment == null)
            _financialAssessment = new FinancialAssessment(this, Keys.FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_FINANCIAL_ASSESSMENT_ID_FKEY);

        return _financialAssessment;
    }

    public Entity entity() {
        if (_entity == null)
            _entity = new Entity(this, Keys.FINANCIAL_ASSESSMENT_METRICS__FINANCIAL_ASSESSMENT_METRICS_ENTITY_ID_FKEY);

        return _entity;
    }

    @Override
    public FinancialAssessmentMetrics as(String alias) {
        return new FinancialAssessmentMetrics(DSL.name(alias), this);
    }

    @Override
    public FinancialAssessmentMetrics as(Name alias) {
        return new FinancialAssessmentMetrics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FinancialAssessmentMetrics rename(String name) {
        return new FinancialAssessmentMetrics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FinancialAssessmentMetrics rename(Name name) {
        return new FinancialAssessmentMetrics(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, BigDecimal, Long, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
