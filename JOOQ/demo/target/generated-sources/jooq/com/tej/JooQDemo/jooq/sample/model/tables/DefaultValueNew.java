/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables;


import com.tej.JooQDemo.jooq.sample.model.FinanceService;
import com.tej.JooQDemo.jooq.sample.model.tables.records.DefaultValueNewRecord;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultValueNew extends TableImpl<DefaultValueNewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>finance_service.default_value_new</code>
     */
    public static final DefaultValueNew DEFAULT_VALUE_NEW = new DefaultValueNew();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DefaultValueNewRecord> getRecordType() {
        return DefaultValueNewRecord.class;
    }

    /**
     * The column <code>finance_service.default_value_new.template_definition_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> TEMPLATE_DEFINITION_ID = createField(DSL.name("template_definition_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.parent_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.has_entities</code>.
     */
    public final TableField<DefaultValueNewRecord, Boolean> HAS_ENTITIES = createField(DSL.name("has_entities"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>finance_service.default_value_new.entity_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> ENTITY_ID = createField(DSL.name("entity_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.parent_entity_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> PARENT_ENTITY_ID = createField(DSL.name("parent_entity_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.entity_attributes_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> ENTITY_ATTRIBUTES_ID = createField(DSL.name("entity_attributes_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.default_value</code>.
     */
    public final TableField<DefaultValueNewRecord, Double> DEFAULT_VALUE = createField(DSL.name("default_value"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>finance_service.default_value_new.default_option_id</code>.
     */
    public final TableField<DefaultValueNewRecord, Long> DEFAULT_OPTION_ID = createField(DSL.name("default_option_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.default_value_new.default_date</code>.
     */
    public final TableField<DefaultValueNewRecord, LocalDate> DEFAULT_DATE = createField(DSL.name("default_date"), SQLDataType.LOCALDATE, this, "");

    private DefaultValueNew(Name alias, Table<DefaultValueNewRecord> aliased) {
        this(alias, aliased, null);
    }

    private DefaultValueNew(Name alias, Table<DefaultValueNewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"default_value_new\" as  SELECT mg.template_definition_id,\n    mg.parent_id,\n    mt.has_entities,\n    e.id AS entity_id,\n    e.parent_id AS parent_entity_id,\n    ea.id AS entity_attributes_id,\n    attr.default_value,\n    attr.default_option_id,\n    attr.default_date\n   FROM ((((finance_service.model_group mg\n     LEFT JOIN finance_service.model_template mt ON ((mg.id = mt.model_group_id)))\n     LEFT JOIN finance_service.entity e ON ((e.model_template_id = mt.id)))\n     LEFT JOIN finance_service.entity_attributes ea ON ((ea.entity_id = e.id)))\n     LEFT JOIN finance_service.attribute attr ON ((attr.id = ea.attribute_id)));"));
    }

    /**
     * Create an aliased <code>finance_service.default_value_new</code> table reference
     */
    public DefaultValueNew(String alias) {
        this(DSL.name(alias), DEFAULT_VALUE_NEW);
    }

    /**
     * Create an aliased <code>finance_service.default_value_new</code> table reference
     */
    public DefaultValueNew(Name alias) {
        this(alias, DEFAULT_VALUE_NEW);
    }

    /**
     * Create a <code>finance_service.default_value_new</code> table reference
     */
    public DefaultValueNew() {
        this(DSL.name("default_value_new"), null);
    }

    public <O extends Record> DefaultValueNew(Table<O> child, ForeignKey<O, DefaultValueNewRecord> key) {
        super(child, key, DEFAULT_VALUE_NEW);
    }

    @Override
    public Schema getSchema() {
        return FinanceService.FINANCE_SERVICE;
    }

    @Override
    public DefaultValueNew as(String alias) {
        return new DefaultValueNew(DSL.name(alias), this);
    }

    @Override
    public DefaultValueNew as(Name alias) {
        return new DefaultValueNew(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DefaultValueNew rename(String name) {
        return new DefaultValueNew(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DefaultValueNew rename(Name name) {
        return new DefaultValueNew(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Boolean, Long, Long, Long, Double, Long, LocalDate> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
