/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables;


import com.tej.JooQDemo.jooq.sample.model.FinanceService;
import com.tej.JooQDemo.jooq.sample.model.tables.records.RevenueCashflowViewRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RevenueCashflowView extends TableImpl<RevenueCashflowViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>finance_service.revenue_cashflow_view</code>
     */
    public static final RevenueCashflowView REVENUE_CASHFLOW_VIEW = new RevenueCashflowView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RevenueCashflowViewRecord> getRecordType() {
        return RevenueCashflowViewRecord.class;
    }

    /**
     * The column <code>finance_service.revenue_cashflow_view.entityid</code>.
     */
    public final TableField<RevenueCashflowViewRecord, Long> ENTITYID = createField(DSL.name("entityid"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.revenue_cashflow_view.parent_id</code>.
     */
    public final TableField<RevenueCashflowViewRecord, Long> PARENT_ID = createField(DSL.name("parent_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.revenue_cashflow_view.entityattributeid</code>.
     */
    public final TableField<RevenueCashflowViewRecord, Long> ENTITYATTRIBUTEID = createField(DSL.name("entityattributeid"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>finance_service.revenue_cashflow_view.attributeid</code>.
     */
    public final TableField<RevenueCashflowViewRecord, Long> ATTRIBUTEID = createField(DSL.name("attributeid"), SQLDataType.BIGINT, this, "");

    private RevenueCashflowView(Name alias, Table<RevenueCashflowViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private RevenueCashflowView(Name alias, Table<RevenueCashflowViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"revenue_cashflow_view\" as  SELECT en.id AS entityid,\n    en.parent_id,\n    ea.id AS entityattributeid,\n    ea.attribute_id AS attributeid\n   FROM (finance_service.entity en\n     JOIN finance_service.entity_attributes ea ON ((ea.entity_id = en.id)));"));
    }

    /**
     * Create an aliased <code>finance_service.revenue_cashflow_view</code> table reference
     */
    public RevenueCashflowView(String alias) {
        this(DSL.name(alias), REVENUE_CASHFLOW_VIEW);
    }

    /**
     * Create an aliased <code>finance_service.revenue_cashflow_view</code> table reference
     */
    public RevenueCashflowView(Name alias) {
        this(alias, REVENUE_CASHFLOW_VIEW);
    }

    /**
     * Create a <code>finance_service.revenue_cashflow_view</code> table reference
     */
    public RevenueCashflowView() {
        this(DSL.name("revenue_cashflow_view"), null);
    }

    public <O extends Record> RevenueCashflowView(Table<O> child, ForeignKey<O, RevenueCashflowViewRecord> key) {
        super(child, key, REVENUE_CASHFLOW_VIEW);
    }

    @Override
    public Schema getSchema() {
        return FinanceService.FINANCE_SERVICE;
    }

    @Override
    public RevenueCashflowView as(String alias) {
        return new RevenueCashflowView(DSL.name(alias), this);
    }

    @Override
    public RevenueCashflowView as(Name alias) {
        return new RevenueCashflowView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RevenueCashflowView rename(String name) {
        return new RevenueCashflowView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RevenueCashflowView rename(Name name) {
        return new RevenueCashflowView(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
